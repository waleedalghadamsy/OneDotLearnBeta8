// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OneDotLearnData;

#nullable disable

namespace OneDotLearnData.Migrations
{
    [DbContext(typeof(OdlDataContext))]
    [Migration("20250322133508_OneDotLearnMigration")]
    partial class OneDotLearnMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OneDotLearnCore.Essential.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("Flag")
                        .HasColumnType("bytea");

                    b.Property<bool>("IsArabic")
                        .HasColumnType("boolean");

                    b.Property<short>("ItuCode")
                        .HasColumnType("smallint");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<string>("TimeZoneId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries", "General");
                });

            modelBuilder.Entity("OneDotLearnCore.Essential.EmailAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("ContactDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsBusiness")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("EmailAddresses", "General");
                });

            modelBuilder.Entity("OneDotLearnCore.Essential.TelephoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsBusiness")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.ToTable("TelephoneNumbers", "General");
                });

            modelBuilder.Entity("OneDotLearnCore.Financials.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<string>("ArabicSymbol")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<string>("LatinSymbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.ToTable("Currencies", "Financials");
                });

            modelBuilder.Entity("OneDotLearnCore.Financials.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("CurrenciesRates", "Financials");
                });

            modelBuilder.Entity("OneDotLearnCore.People.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AcademicSpecialization")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("ArFamilyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ArFatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ArFirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ArGrandfatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("ContactDetailsId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EducationLevel")
                        .HasColumnType("smallint");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("FinancialAccountId")
                        .HasColumnType("integer");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsArabic")
                        .HasColumnType("boolean");

                    b.Property<string>("LtnFamilyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LtnFatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LtnFirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LtnGrandfatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<short?>("NationalityId")
                        .HasColumnType("smallint");

                    b.Property<string>("OtherCourses")
                        .HasColumnType("text");

                    b.Property<string>("OtherFields")
                        .HasColumnType("text");

                    b.Property<string>("OtherNationality")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherResidenceCountry")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ResidenceCountryId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Instructors", "People");
                });

            modelBuilder.Entity("OneDotLearnCore.People.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Achievement")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("JobId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("WorkPlaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Experiences", "People");
                });

            modelBuilder.Entity("OneDotLearnCore.Security.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("LastSignedInAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<byte>("Role")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Users", "Security");
                });

            modelBuilder.Entity("OneDotLearnCore.Security.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("FullName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("OtherInterests")
                        .HasColumnType("text");

                    b.Property<string>("OtherProgLanguages")
                        .HasColumnType("text");

                    b.Property<string>("OtherTechnologies")
                        .HasColumnType("text");

                    b.Property<byte?>("ProgExperience")
                        .HasColumnType("smallint");

                    b.Property<int?>("ProgLanguages")
                        .HasColumnType("integer");

                    b.Property<byte?>("RdbmsLevel")
                        .HasColumnType("smallint");

                    b.Property<int?>("SWDevTechnologies")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UsersProfiles", "Security");
                });

            modelBuilder.Entity("OneDotLearnCore.Training.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte>("Duration")
                        .HasColumnType("smallint");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("FinancialAccountId")
                        .HasColumnType("integer");

                    b.Property<byte>("InstructorFeesShare")
                        .HasColumnType("smallint");

                    b.Property<string>("LatinTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("bytea");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Courses", "Training");
                });

            modelBuilder.Entity("OneDotLearnCore.Training.CourseContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CoursesContents", "Training");
                });

            modelBuilder.Entity("OneDotLearnCore.Training.Enrolment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CancellationReason")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CancelledOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("CashPaymentQrCode")
                        .HasColumnType("bytea");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<int>("CycleId")
                        .HasColumnType("integer");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<float>("Fees")
                        .HasColumnType("real");

                    b.Property<bool?>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<byte>("PaymentMethod")
                        .HasColumnType("smallint");

                    b.Property<int>("TraineeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Enrolments", "Training");
                });

            modelBuilder.Entity("OneDotLearnCore.Training.ProductDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProductsDomains", "Training");
                });

            modelBuilder.Entity("OneDotLearnCore.Training.SessionAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("AttendedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("CycleId")
                        .HasColumnType("integer");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("TraineeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AttanedanceSheet", "Training");
                });

            modelBuilder.Entity("OneDotLearnCore.Training.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AcademicSpecialization")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("ArFamilyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ArFatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ArFirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ArGrandfatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("ContactDetailsId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte>("EducationLevel")
                        .HasColumnType("smallint");

                    b.Property<byte>("EntityStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("FinancialAccountId")
                        .HasColumnType("integer");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsArabic")
                        .HasColumnType("boolean");

                    b.Property<string>("LtnFamilyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LtnFatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LtnFirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("LtnGrandfatherName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<short?>("NationalityId")
                        .HasColumnType("smallint");

                    b.Property<string>("OtherInterests")
                        .HasColumnType("text");

                    b.Property<string>("OtherNationality")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtherResidenceCountry")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ResidenceCountryId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Trainees", "Training");
                });
#pragma warning restore 612, 618
        }
    }
}
